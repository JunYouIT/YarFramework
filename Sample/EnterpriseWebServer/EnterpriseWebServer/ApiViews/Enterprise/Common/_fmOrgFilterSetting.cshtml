@{
    Yar.Service.BusinessContext context = Model.Context;
    var tokenId = (context == null || context.Credential == null) ? "" : context.Credential.TokenId;
}
<div style="padding: 5px 20px 5px;">
    <div class="row">
        <div class="col-md-12">
            <div class="form form-horizontal">
                <div class="form-body">
                    <div class="form-group">
                        <div class="col-md-12">
                            <input @if (!Model.RawData.EnableOrgCode) { <text>disabled</text> } type="checkbox" data-bind="checked:param.includesub"> 包含子部门
                     </div>

                 </div>

             </div>

         </div>


     </div>

 </div>


</div>

 <script type="text/javascript">

     (function (eleId, context, callback) {
            //debugger;
            $.parser.parse(eleId);

                                    var ViewModel = function (data) {
                                        //debugger;
                                        var self = this;//JSON.parse(data.DefaultParam)
                                        self.param = context.data.param ?  ko.mapping.fromJS($.parseJSON(context.data.param)) : ko.mapping.fromJS($.parseJSON(data.DefaultParam));
                                        self.value = context.data.value ? ko.mapping.fromJS($.parseJSON(context.data.value)) : ko.mapping.fromJS($.parseJSON(data.DefaultValue));
                                        self.Init = function () {

                                        };
                                        self.OnOk = function (finishcall) {
                                            var result = {param:$.toJSON(ko.mapping.toJS(self.param)),value:$.toJSON(ko.mapping.toJS(self.value))};
                                        finishcall(result, callback);
                                    };
                                };
                                var data = @this.Raw(Model.Data);
                                var viewModel = new ViewModel(data);
                                MainApp.DialogModel(eleId, data.Name + '设定', 300, 80, viewModel.OnOk,null, function () {
                                    ko.applyBindings(viewModel, $(eleId)[0]);
                                    viewModel.Init();
                                });

                            })(eleId, context, callback);
    </script>
