@{
    Yar.Service.BusinessContext context = Model.Context;
    var tokenId = (context == null || context.Credential == null) ? "" : context.Credential.TokenId;
    var bizId = Model.BizId;
}

<div class="content">
    @Yar.Service.UIHelper.RenderPatial(@"Enterprise\Common\_pageHead.cshtml", Model)

    <div class="row" style="display: block;">
        <div class="col-md-12">
            <div class="portlet light">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-tag"></i>薪资等级管理
                    </div>
                </div>
                <div class="portlet-body">
                    <div class="form form-horizontal">
                        <div class="form-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label bold col-md-4">名称</label>
                                        <div class="col-md-8">
                                            <input type="text" data-bind="textboxValue:displaydata.name,txclick:OnRefresh" class="easyui-textbox" style="height: 34px; background-color: #FFFFE6; width: 100%;" placeholder="" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label bold col-md-4">类型</label>
                                        <div class="col-md-8">
                                            <input type="text" data-bind="comboboxValue:displaydata.type,dataSource:dataSources.dsSalaryLevelTypes" style="width: 100%; height: 34px;" class="easyui-combobox" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div style="float: right;display: inline-block;">
                                        <a class="gt2_btn_search" href="javascript:;" data-bind="click:function(event) { OnRefresh(false) }"><i class="fa fa-search"></i> 搜索 </a>
                                        <a class="gt2_btn_add" href="javascript:;" data-bind="click:OnCreate" data-toggle="tooltip" data-placement="top" title="新增"><i class="fa fa-plus-circle"></i> 新增 </a>
                                        <a class="gt2_btn_delete" href="javascript:;" data-bind="click:OnDelete"><i class="fa fa-trash-o"></i> 删除 </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="margin-top:5px;" id="griddiv">
                        <table data-bind="grid:uiSources.gridList" id="gridlist" style=""></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script id="ContentInit" type="text/javascript" src="">
    MainApp.ViewSite = '@Yar.Core.YarSystem.Current.ViewSite';

    $.ajaxSetup({
        cache: false
    });

    Pagecom = (function () {
        function Pagecom() {

        };

        return Pagecom;
    })();

    var ViewModel = function (data) {
        var self = this;

        self.ViewTool = new YarClient.ViewModel("@bizId", "@tokenId");

        //
        self.displaydata = ko.mapping.fromJS({
            name:   '',
            type:   ''
        });
        self.dataSources = data.dataSources;

        self.uiSources = {
            gridList: {
                ops: {
                    ClientPage: false,
                    ele: "#gridlist",
                    SizeOpt: {
                        pid: "#griddiv",
                        top: @Yar.Service.UIHelper.GetMasterInterval(context) + 131
                    }
                },
                sops: {
                    url: self.ViewTool.GetActionUrl("Post", "GetResourceList"),
                    fitColumns:true,
                    striped:true,
                    selectOnCheck: false,
                    checkOnSelect: false,
                    columns: [[
                        { field: 'ck', checkbox:true },
                        { field: 'SalaryLevelName', title: '名称',sortable:true, width: 260 ,formatter: function(value, row, index){
                            var n = String.format('<a class="" href="#" title="{1}" data-toggle="tooltip" data-placement="top" onclick="Pagecom.ViewModel.OnView(\'{0}\')">{1}</a>', row.SalaryLevelID, value)

                            return n;
                        }},
                        { field: 'SalaryLevelValue', title: '数值',sortable:true, width: 200 },
                        { field: 'SalaryLevelType', title: '类型',sortable:true, width: 100 },
                        { field: 'IsDisabled', title: '状态',sortable:true, width: 100, formatter: function(value, row, index){
                            var s = '';
                            if (value) {
                                s = String.format('<a class="btn btn-xs red" onclick="Pagecom.ViewModel.OnModifyState(\'{0}\')" title="已禁用，点击启用该项">已禁用</a>', row.SalaryLevelID, value);
                            }
                            else {
                                s = String.format('<a class="btn btn-xs btn-success" onclick="Pagecom.ViewModel.OnModifyState(\'{0}\')" title="已启用，点击禁用该项">已启用</a>', row.SalaryLevelID);
                            }

                            return  s;
                        } },
                        { field: 'SalaryLevelID', title: '功能',formatter: function(value, row, index){
                            var s = String.format('<a class="btn_default" href="#" onclick="Pagecom.ViewModel.OnEdit(\'{0}\')"><i class="fa fa-edit"></i></a>', value);

                            return s;
                        } }
                    ]]
                }
            }
        };

        self.OnRefresh = function (isReload) {
            var data = {
                name:   Pagecom.ViewModel.displaydata.name(),
                type:   Pagecom.ViewModel.displaydata.type()
            };
            if(isReload){
                $('#gridlist').datagrid('reload',data);
            } else {
                $('#gridlist').datagrid('load',data);
            }
        };

        self.OnCreate = function () {
            MainApp.ShowPartialView(YarClient.NewGuid(), self.ViewTool.GetActionUrl("Get", "CreateView"), { ViewModel: self, data: {} },
            function (data) {
                self.OnRefresh();
            });
        };

        self.OnView = function (resId) {
            MainApp.ShowPartialView(YarClient.NewGuid(), self.ViewTool.GetActionUrl("Get", "PreviewView", { resId: resId }), { ViewModel: self, data: {} },
            function (data) {
                //self.OnRefresh();
            });
        };

        self.OnEdit = function (resId) {
            MainApp.ShowPartialView(YarClient.NewGuid(), self.ViewTool.GetActionUrl("Get", "EditView", { resId: resId }), { ViewModel: self, data: {} },
            function (data) {
                self.OnRefresh(true);
            });
        };

        self.OnDelete = function () {
            var rows = $("#gridlist").datagrid('getChecked');
            var array = [];
            var names = '';

            if(rows && rows.length > 0){
                rows.each(function (value, index) {
                    array.push(value.SalaryLevelID);

                    if (names != ''){
                        names += '\r\n';
                    }

                    names += value.SalaryLevelName;
                });

                swal({
                    title: "你是否确认删除如下信息?",
                    text: names,
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false
                }, function() {
                    YarClient.AjaxGet(self.ViewTool.GetActionUrl("Get", "DeleteAll",{ ids: array.join(';') }), {
                        IsWarning: true,
                        success: function (returnData) {
                            if(returnData.Result != null && returnData.Result.status == 'warning')
                            {
                                swal(returnData.Result.message, "", "warning");
                                return;
                            }

                            self.OnRefresh();

                            swal("删除成功", "", "success");
                        }
                    });
                });
            }
            else{
                swal("请选择需要删除的信息", "", "warning");
            }
        };

        self.OnModifyState = function (resId) {
            $.ajax({
                url: self.ViewTool.GetActionUrl("Get", "ModifyState", { resId: resId }),
                success: function (text) {
                    if(text.indexOf('Error') != -1)
                    {
                        swal("当前岗位等级下存在成员,无法禁用!", "", "warning");
                        return;
                    }

                    self.OnRefresh(true);
                },
                error: function () {
                }
            });
        };
    };

    var data = @this.Raw(Model.Data);
    var viewModel = new ViewModel(data);

    Pagecom.ViewModel = viewModel;

    ko.applyBindings(viewModel);
    viewModel.OnRefresh();
</script>

<script id="ContentInitCss" type="text">
    [@Yar.Service.BundleRender.RenderFormat("~/PageCommonCss")]
</script>

<script id="ContentInitScript" type="text">
    [@Yar.Service.BundleRender.RenderFormat("~/PageCommonJs"),
    @Yar.Service.BundleRender.RenderFormat("~/PageJs"),
    @Yar.Service.BundleRender.RenderFormat("~/PageMainJs")]
</script>