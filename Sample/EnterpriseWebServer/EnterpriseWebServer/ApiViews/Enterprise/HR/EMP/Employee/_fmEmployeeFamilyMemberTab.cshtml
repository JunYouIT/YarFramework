@{
    Yar.Service.BusinessContext context = Model.Context;

    var tokenId = (context == null || context.Credential == null) ? "" : context.Credential.TokenId;
    var resid = Model.RawData.form.ResId;
    var bizId = Model.BizId;
    var isView = "1".Equals(context.Request["isView"]);
}

<div style="padding:5px;    background-color: #fff;">
    <div class="form form-horizontal">
        <div class="form-body">
            <div class="row">
                <div id="familyMember">
                    @if (!isView)
                    {
                        <div class="col-md-12" style="text-align: right">
                            <div style="display: inline-block;">
                                <a href="javascript:;" class="gt2_btn_add" data-bind="click:OnCreateFamilyMember"><i class="fa fa-plus-circle"></i> 新增 </a>
                                <a href="javascript:;" class="gt2_btn_delete" data-bind="click:OnDeleteAllFamilyMember"><i class="fa fa-trash-o"></i> 删除 </a>
                            </div>
                        </div>
                    }@*End IsView*@
                    <div class="col-md-12" style="margin-top:5px;" id="FMdiv">
                        <table data-bind="grid:uiSources.FMlist" id="FMlist" style="height:420px;width:100%;"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    (function (eleId, context, callback) {
        //debugger;
        $.parser.parse(eleId);

        var ViewModel = function (data) {
            var self = this;

            if (context.ViewModel && context.ViewModel.BizName && context.ViewModel.SubBizName) {
                self.ViewTool = new YarClient.ViewModel(context.ViewModel.BizName, "@tokenId");
                self.BizName = context.ViewModel.BizName;
                self.SubBizName = context.ViewModel.SubBizName;
                self.DispMode = context.ViewModel.DispMode;
            }
            else {
                self.ViewTool = new YarClient.ViewModel("@bizId", "@tokenId");
            }

            //
            self.dataSources = data.dataSources;

            self.Init = function()
            {
                $('#FMlist').datagrid('load');
            };

            self.uiSources = {
                FMlist: {
                    ops: {
                        ClientPage: false,
                        ele: "#FMlist",
                        SizeOpt: {
                            pid: "#FMdiv",
                            top: ((self.DispMode && self.DispMode == "singleTab") ? 0 : 430)
                        }
                    },
                    sops: {
                        url: self.ViewTool.GetActionUrl("Post", (self.SubBizName ? self.SubBizName + ".GetFamilyMemberList" : "GetFamilyMemberList"), { resId: data.form.empId }),
                        fitColumns:true,
                        selectOnCheck: false,
                        checkOnSelect: false,
                        pageSize: 10,
                        columns: [[
                        @if (!isView)
                        {
                            <text>
                            { field: 'ck', checkbox:true },
                            </text>
                        }
                        { field: 'Name', title: '姓名',sortable:true, width: 160 },
                        { field: 'Relationships', title: '关系',sortable:true, width: 120 },
                        { field: 'Gender', title: '性别',sortable:true, width: 120 },
                        { field: 'ContactCellphone', title: '联系电话',sortable:true, width: 250 },
                        { field: 'Emergency', title: '紧急联系人',sortable:true, width: 160, formatter: function(value, row, index){
                            var s = String.format('<a class="btn btn-xs btn-success" disabled="disabled" onclick="Pagecom.EditViewModel.OnModifyIsEmergencyState(\'{0}\')">{1}</a>',row.FamilyMemberID,value);
                            if(value=='否')
                                s = String.format('<a class="btn btn-xs btn-default" @(isView? " disabled='disabled' title='点击设为紧急联系人' " : "") data-toggle="tooltip" onclick="Pagecom.EditViewModel.OnModifyIsEmergencyState(\'{0}\')">{1}</a>',row.FamilyMemberID,value);
                            return  s;
                        } },
                        //{ field: 'Birthday', title: '出生日期',sortable:true, width: 200 },
                        //{ field: 'Job', title: '职业',sortable:true, width: 200 },
                        //{ field: 'Company', title: '工作单位',sortable:true, width: 200 },
                        { field: 'InsuranceStatus', title: '保险状态',sortable:true, width: 200 },
                        { field: 'InsuranceNumber', title: '保险编号',sortable:true, width: 200 },
                        //{ field: 'IDNumber', title: '证件号码',sortable:true, width: 200 },
                        //{ field: 'IDType', title: '证件类型',sortable:true, width: 200 },
                        @if (!isView) {
                        <text>
                        { field: 'FamilyMemberID', title: '功能',formatter: function(value, row, index){

                            var s =String.format('<a class="btn_default" href="#" onclick="Pagecom.EditViewModel.OnFamilyMemberEdit(\'{0}\')"><i class="fa fa-edit"></i></a>',row.FamilyMemberID);
                            //String.format('<a class="btn_default" href="#" onclick="Pagecom.EditViewModel.OnFamilyMemberDelete(\'{0}\')"><i class="fa fa-trash-o"></i></a>',row.FamilyMemberID);


                            return s;
                        }
                        }
                        </text>
                        }@*End IsView*@
                        ]]
                    }
                }
            };

            self.OnRefresh = function () {
                var data = {
                };
                $('#FMlist').datagrid('load', data);
            };
            @if (!isView) {
                <text>
            self.OnCreateFamilyMember = function () {
                MainApp.ShowPartialView(YarClient.NewGuid(), self.ViewTool.GetActionUrl("Get", "CreateFamilyMemberView", { empId: data.form.empId ,legalId: data.form.legalId}), { ViewModel: self, data: {} },
                function (data) {
                    if (data.FamilyInfo) {
                        Pagecom.EditEmpViewModel.OnChangeEducation(data.FamilyInfo.phone);
                    }
                    self.OnRefresh();
                });
            };
            self.OnFamilyMemberEdit = function (fmId) {
                MainApp.ShowPartialView(YarClient.NewGuid(), self.ViewTool.GetActionUrl("Get", "EditFamilyMemberView", { resId: fmId,empId:data.form.empId ,legalId: data.form.legalId}), { ViewModel: self, data: {} },
                function (data) {
                    if (data.FamilyInfo) {
                        Pagecom.EditEmpViewModel.OnChangeEducation(data.FamilyInfo.phone);
                    }
                    self.OnRefresh();
                });
            };
            self.OnDeleteAllFamilyMember = function () {
                var rows = $("#FMlist").datagrid('getChecked');
                var array = [];
                var names = [];
                //debugger;
                if(rows && rows.length > 0){
                    rows.each(function (value, index) {
                        array.push(value.FamilyMemberID);
                        names.push(value.Name);
                    });
                    swal({
                        title: "你是否确认删除如下信息?",
                        text: names.join('、'),
                        type: "warning",
                        showCancelButton: true,
                        closeOnConfirm: false,
                        confirmButtonText:'是的，删除！'
                    },  function () {
                            //alert(array.join(';'));
                            YarClient.AjaxGet(self.ViewTool.GetActionUrl("Get", "DeleteAllFamilyMember",{ ids: array.join(';') }), {
                                IsWarning: true,
                                success: function (returnData) {
                                    self.OnRefresh();
                                    swal("删除成功", "", "success");
                                }
                            });

                    });
                } else {
                    swal("请选中需要删除的数据", "", "warning");
                }

            };
            //self.OnFamilyMemberDelete = function () {
            //    var row = $('#FMlist').datagrid('getSelected');
            //    if (row) {
            //        $.messager.confirm('确认', '你确定想删除此数据?', function (r) {
            //            if (r) {
            //                $.ajax({
            //                    url: self.ViewTool.GetActionUrl("Get", "DeleteEducation", { resId: row.FamilyMemberID, logicDeletes: 1 }),
            //                    success: function (text) {
            //                        self.OnRefresh();
            //                    },
            //                    error: function () {
            //                    }
            //                });
            //            }
            //        });
            //    }
            //};
            self.OnModifyIsEmergencyState = function (efId) {
                var rows = $('#FMlist').datagrid('getRows');
                var row;
                for (var i = 0; i < rows.length; i++) {
                    if (rows[i].FamilyMemberID == efId) {
                        row = rows[i];
                        break;
                    }
                }
                if (row) {
                    if (row.ContactCellphone == '' || row.ContactCellphone==null) {
                        swal("不能设为紧急联系人", "该成员没有联系电话，不能设为紧急联系人", "warning");
                    } else {
                        swal({
                            title: "你是否确认将紧急联系人变更为：" + row.Name + "?",
                            text: String.format('姓名：{0}　联系电话：{1}', row.Name, row.ContactCellphone),
                            type: "warning",
                            showCancelButton: true,
                            closeOnConfirm: false
                        }, function() {
                            YarClient.AjaxGet(self.ViewTool.GetActionUrl("Get", "ModifyIsEmergencyState", { resId: efId }), {
                                IsWarning: true,
                                success: function(returnData) {
                                    if (returnData) {
                                        Pagecom.EditEmpViewModel.OnChangeEmergencyCellPhone(row.ContactCellphone);
                                        self.OnRefresh();
                                        swal("变更成功", "", "success");
                                    }
                                }
                            });
                        });
                    }
                } else {
                    swal("设置失败", "", "warning");
                }

            };
                </text>
            }@*End IsView*@

        };


        var data = @this.Raw(Model.Data);
        var viewModel = new ViewModel(data);
        Pagecom.EditViewModel = viewModel;



        ko.applyBindings(viewModel, $(eleId)[0]);
        viewModel.Init();

    })(eleId, context, callback);
</script>
